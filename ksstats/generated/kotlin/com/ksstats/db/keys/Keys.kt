/*
 * This file is generated by jOOQ.
 */
package com.ksstats.db.keys


import com.ksstats.db.tables.Battingdetails
import com.ksstats.db.tables.Bowlingdetails
import com.ksstats.db.tables.Closeofplay
import com.ksstats.db.tables.Countries
import com.ksstats.db.tables.Countrycodes
import com.ksstats.db.tables.Extramatchdetails
import com.ksstats.db.tables.Fallofwickets
import com.ksstats.db.tables.Fielding
import com.ksstats.db.tables.Grounds
import com.ksstats.db.tables.Groundsmatchtypes
import com.ksstats.db.tables.Groundsname
import com.ksstats.db.tables.Innings
import com.ksstats.db.tables.Matches
import com.ksstats.db.tables.Matchreferees
import com.ksstats.db.tables.Matchrefereesmatches
import com.ksstats.db.tables.Matchsubtype
import com.ksstats.db.tables.Notes
import com.ksstats.db.tables.Partnerships
import com.ksstats.db.tables.Partnershipsplayers
import com.ksstats.db.tables.Players
import com.ksstats.db.tables.Playersmatches
import com.ksstats.db.tables.Playersofthematchmatches
import com.ksstats.db.tables.Playersteams
import com.ksstats.db.tables.Reserveumpires
import com.ksstats.db.tables.Reserveumpiresmatches
import com.ksstats.db.tables.Scorers
import com.ksstats.db.tables.Scorersmatches
import com.ksstats.db.tables.Teams
import com.ksstats.db.tables.Teamsmatchtypes
import com.ksstats.db.tables.Tvumpires
import com.ksstats.db.tables.Tvumpiresmatches
import com.ksstats.db.tables.Umpires
import com.ksstats.db.tables.Umpiresmatches
import com.ksstats.db.tables.records.BattingdetailsRecord
import com.ksstats.db.tables.records.BowlingdetailsRecord
import com.ksstats.db.tables.records.CloseofplayRecord
import com.ksstats.db.tables.records.CountriesRecord
import com.ksstats.db.tables.records.CountrycodesRecord
import com.ksstats.db.tables.records.ExtramatchdetailsRecord
import com.ksstats.db.tables.records.FallofwicketsRecord
import com.ksstats.db.tables.records.FieldingRecord
import com.ksstats.db.tables.records.GroundsRecord
import com.ksstats.db.tables.records.GroundsmatchtypesRecord
import com.ksstats.db.tables.records.GroundsnameRecord
import com.ksstats.db.tables.records.InningsRecord
import com.ksstats.db.tables.records.MatchesRecord
import com.ksstats.db.tables.records.MatchrefereesRecord
import com.ksstats.db.tables.records.MatchrefereesmatchesRecord
import com.ksstats.db.tables.records.MatchsubtypeRecord
import com.ksstats.db.tables.records.NotesRecord
import com.ksstats.db.tables.records.PartnershipsRecord
import com.ksstats.db.tables.records.PartnershipsplayersRecord
import com.ksstats.db.tables.records.PlayersRecord
import com.ksstats.db.tables.records.PlayersmatchesRecord
import com.ksstats.db.tables.records.PlayersofthematchmatchesRecord
import com.ksstats.db.tables.records.PlayersteamsRecord
import com.ksstats.db.tables.records.ReserveumpiresRecord
import com.ksstats.db.tables.records.ReserveumpiresmatchesRecord
import com.ksstats.db.tables.records.ScorersRecord
import com.ksstats.db.tables.records.ScorersmatchesRecord
import com.ksstats.db.tables.records.TeamsRecord
import com.ksstats.db.tables.records.TeamsmatchtypesRecord
import com.ksstats.db.tables.records.TvumpiresRecord
import com.ksstats.db.tables.records.TvumpiresmatchesRecord
import com.ksstats.db.tables.records.UmpiresRecord
import com.ksstats.db.tables.records.UmpiresmatchesRecord

import org.jooq.ForeignKey
import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal



// -------------------------------------------------------------------------
// UNIQUE and PRIMARY KEY definitions
// -------------------------------------------------------------------------

val BATTINGDETAILS__PK_BATTINGDETAILS: UniqueKey<BattingdetailsRecord> = Internal.createUniqueKey(Battingdetails.BATTINGDETAILS, DSL.name("pk_BattingDetails"), arrayOf(Battingdetails.BATTINGDETAILS.ID), true)
val BOWLINGDETAILS__PK_BOWLINGDETAILS: UniqueKey<BowlingdetailsRecord> = Internal.createUniqueKey(Bowlingdetails.BOWLINGDETAILS, DSL.name("pk_BowlingDetails"), arrayOf(Bowlingdetails.BOWLINGDETAILS.ID), true)
val CLOSEOFPLAY__PK_CLOSEOFPLAY: UniqueKey<CloseofplayRecord> = Internal.createUniqueKey(Closeofplay.CLOSEOFPLAY, DSL.name("pk_CloseOfPlay"), arrayOf(Closeofplay.CLOSEOFPLAY.ID), true)
val COUNTRIES__PK_COUNTRIES: UniqueKey<CountriesRecord> = Internal.createUniqueKey(Countries.COUNTRIES, DSL.name("pk_Countries"), arrayOf(Countries.COUNTRIES.ID), true)
val COUNTRYCODES__PK_COUNTRYCODES: UniqueKey<CountrycodesRecord> = Internal.createUniqueKey(Countrycodes.COUNTRYCODES, DSL.name("pk_CountryCodes"), arrayOf(Countrycodes.COUNTRYCODES.ID), true)
val FALLOFWICKETS__PK_FALLOFWICKETS: UniqueKey<FallofwicketsRecord> = Internal.createUniqueKey(Fallofwickets.FALLOFWICKETS, DSL.name("pk_FallOfWickets"), arrayOf(Fallofwickets.FALLOFWICKETS.ID), true)
val FIELDING__PK_FIELDING: UniqueKey<FieldingRecord> = Internal.createUniqueKey(Fielding.FIELDING, DSL.name("pk_Fielding"), arrayOf(Fielding.FIELDING.ID), true)
val GROUNDS__PK_GROUNDS: UniqueKey<GroundsRecord> = Internal.createUniqueKey(Grounds.GROUNDS, DSL.name("pk_Grounds"), arrayOf(Grounds.GROUNDS.ID), true)
val GROUNDSMATCHTYPES__PK_GROUNDSMATCHTYPES: UniqueKey<GroundsmatchtypesRecord> = Internal.createUniqueKey(Groundsmatchtypes.GROUNDSMATCHTYPES, DSL.name("pk_GroundsMatchTypes"), arrayOf(Groundsmatchtypes.GROUNDSMATCHTYPES.ID), true)
val GROUNDSNAME__PK_GROUNDSNAME: UniqueKey<GroundsnameRecord> = Internal.createUniqueKey(Groundsname.GROUNDSNAME, DSL.name("pk_GroundsName"), arrayOf(Groundsname.GROUNDSNAME.ID), true)
val INNINGS__PK_INNINGS: UniqueKey<InningsRecord> = Internal.createUniqueKey(Innings.INNINGS, DSL.name("pk_Innings"), arrayOf(Innings.INNINGS.ID), true)
val MATCHES__PK_MATCHES: UniqueKey<MatchesRecord> = Internal.createUniqueKey(Matches.MATCHES, DSL.name("pk_Matches"), arrayOf(Matches.MATCHES.ID), true)
val MATCHREFEREES__PK_MATCHREFEREES: UniqueKey<MatchrefereesRecord> = Internal.createUniqueKey(Matchreferees.MATCHREFEREES, DSL.name("pk_MatchReferees"), arrayOf(Matchreferees.MATCHREFEREES.ID), true)
val MATCHSUBTYPE__PK_MATCHSUBTYPE: UniqueKey<MatchsubtypeRecord> = Internal.createUniqueKey(Matchsubtype.MATCHSUBTYPE, DSL.name("pk_MatchSubType"), arrayOf(Matchsubtype.MATCHSUBTYPE.ID), true)
val NOTES__PK_NOTES: UniqueKey<NotesRecord> = Internal.createUniqueKey(Notes.NOTES, DSL.name("pk_Notes"), arrayOf(Notes.NOTES.ID), true)
val PARTNERSHIPS__PK_PARTNERSHIPS: UniqueKey<PartnershipsRecord> = Internal.createUniqueKey(Partnerships.PARTNERSHIPS, DSL.name("pk_Partnerships"), arrayOf(Partnerships.PARTNERSHIPS.ID), true)
val PARTNERSHIPSPLAYERS__PK_PARTNERSHIPSPLAYERS: UniqueKey<PartnershipsplayersRecord> = Internal.createUniqueKey(Partnershipsplayers.PARTNERSHIPSPLAYERS, DSL.name("pk_PartnershipsPlayers"), arrayOf(Partnershipsplayers.PARTNERSHIPSPLAYERS.ID), true)
val PLAYERS__PK_PLAYERS: UniqueKey<PlayersRecord> = Internal.createUniqueKey(Players.PLAYERS, DSL.name("pk_Players"), arrayOf(Players.PLAYERS.ID), true)
val PLAYERSMATCHES__PK_PLAYERSMATCHES: UniqueKey<PlayersmatchesRecord> = Internal.createUniqueKey(Playersmatches.PLAYERSMATCHES, DSL.name("pk_PlayersMatches"), arrayOf(Playersmatches.PLAYERSMATCHES.ID), true)
val RESERVEUMPIRES__PK_RESERVEUMPIRES: UniqueKey<ReserveumpiresRecord> = Internal.createUniqueKey(Reserveumpires.RESERVEUMPIRES, DSL.name("pk_ReserveUmpires"), arrayOf(Reserveumpires.RESERVEUMPIRES.ID), true)
val SCORERS__PK_SCORERS: UniqueKey<ScorersRecord> = Internal.createUniqueKey(Scorers.SCORERS, DSL.name("pk_Scorers"), arrayOf(Scorers.SCORERS.ID), true)
val TEAMS__PK_TEAMS: UniqueKey<TeamsRecord> = Internal.createUniqueKey(Teams.TEAMS, DSL.name("pk_Teams"), arrayOf(Teams.TEAMS.ID), true)
val TEAMSMATCHTYPES__PK_TEAMSMATCHTYPES: UniqueKey<TeamsmatchtypesRecord> = Internal.createUniqueKey(Teamsmatchtypes.TEAMSMATCHTYPES, DSL.name("pk_TeamsMatchTypes"), arrayOf(Teamsmatchtypes.TEAMSMATCHTYPES.ID), true)
val TVUMPIRES__PK_TVUMPIRES: UniqueKey<TvumpiresRecord> = Internal.createUniqueKey(Tvumpires.TVUMPIRES, DSL.name("pk_TvUmpires"), arrayOf(Tvumpires.TVUMPIRES.ID), true)
val UMPIRES__PK_UMPIRES: UniqueKey<UmpiresRecord> = Internal.createUniqueKey(Umpires.UMPIRES, DSL.name("pk_Umpires"), arrayOf(Umpires.UMPIRES.ID), true)

// -------------------------------------------------------------------------
// FOREIGN KEY definitions
// -------------------------------------------------------------------------

val BATTINGDETAILS__FK_BATTINGDETAILS_PK_GROUNDS: ForeignKey<BattingdetailsRecord, GroundsRecord> = Internal.createForeignKey(Battingdetails.BATTINGDETAILS, DSL.name("fk_BattingDetails_pk_Grounds"), arrayOf(Battingdetails.BATTINGDETAILS.GROUNDID), com.ksstats.db.keys.GROUNDS__PK_GROUNDS, arrayOf(Grounds.GROUNDS.ID), true)
val BATTINGDETAILS__FK_BATTINGDETAILS_PK_MATCHES: ForeignKey<BattingdetailsRecord, MatchesRecord> = Internal.createForeignKey(Battingdetails.BATTINGDETAILS, DSL.name("fk_BattingDetails_pk_Matches"), arrayOf(Battingdetails.BATTINGDETAILS.MATCHID), com.ksstats.db.keys.MATCHES__PK_MATCHES, arrayOf(Matches.MATCHES.ID), true)
val BATTINGDETAILS__FK_BATTINGDETAILS_PK_PLAYERS: ForeignKey<BattingdetailsRecord, PlayersRecord> = Internal.createForeignKey(Battingdetails.BATTINGDETAILS, DSL.name("fk_BattingDetails_pk_Players"), arrayOf(Battingdetails.BATTINGDETAILS.BOWLERID, Battingdetails.BATTINGDETAILS.PLAYERID), com.ksstats.db.keys.PLAYERS__PK_PLAYERS, arrayOf(Players.PLAYERS.ID, Players.PLAYERS.ID), true)
val BATTINGDETAILS__FK_BATTINGDETAILS_PK_TEAMS: ForeignKey<BattingdetailsRecord, TeamsRecord> = Internal.createForeignKey(Battingdetails.BATTINGDETAILS, DSL.name("fk_BattingDetails_pk_Teams"), arrayOf(Battingdetails.BATTINGDETAILS.OPPONENTSID), com.ksstats.db.keys.TEAMS__PK_TEAMS, arrayOf(Teams.TEAMS.ID), true)
val BOWLINGDETAILS__FK_BOWLINGDETAILS_PK_GROUNDS: ForeignKey<BowlingdetailsRecord, GroundsRecord> = Internal.createForeignKey(Bowlingdetails.BOWLINGDETAILS, DSL.name("fk_BowlingDetails_pk_Grounds"), arrayOf(Bowlingdetails.BOWLINGDETAILS.GROUNDID), com.ksstats.db.keys.GROUNDS__PK_GROUNDS, arrayOf(Grounds.GROUNDS.ID), true)
val BOWLINGDETAILS__FK_BOWLINGDETAILS_PK_MATCHES: ForeignKey<BowlingdetailsRecord, MatchesRecord> = Internal.createForeignKey(Bowlingdetails.BOWLINGDETAILS, DSL.name("fk_BowlingDetails_pk_Matches"), arrayOf(Bowlingdetails.BOWLINGDETAILS.MATCHID), com.ksstats.db.keys.MATCHES__PK_MATCHES, arrayOf(Matches.MATCHES.ID), true)
val BOWLINGDETAILS__FK_BOWLINGDETAILS_PK_PLAYERS: ForeignKey<BowlingdetailsRecord, PlayersRecord> = Internal.createForeignKey(Bowlingdetails.BOWLINGDETAILS, DSL.name("fk_BowlingDetails_pk_Players"), arrayOf(Bowlingdetails.BOWLINGDETAILS.PLAYERID), com.ksstats.db.keys.PLAYERS__PK_PLAYERS, arrayOf(Players.PLAYERS.ID), true)
val BOWLINGDETAILS__FK_BOWLINGDETAILS_PK_TEAMS: ForeignKey<BowlingdetailsRecord, TeamsRecord> = Internal.createForeignKey(Bowlingdetails.BOWLINGDETAILS, DSL.name("fk_BowlingDetails_pk_Teams"), arrayOf(Bowlingdetails.BOWLINGDETAILS.OPPONENTSID, Bowlingdetails.BOWLINGDETAILS.TEAMID), com.ksstats.db.keys.TEAMS__PK_TEAMS, arrayOf(Teams.TEAMS.ID, Teams.TEAMS.ID), true)
val CLOSEOFPLAY__FK_CLOSEOFPLAY_PK_MATCHES: ForeignKey<CloseofplayRecord, MatchesRecord> = Internal.createForeignKey(Closeofplay.CLOSEOFPLAY, DSL.name("fk_CloseOfPlay_pk_Matches"), arrayOf(Closeofplay.CLOSEOFPLAY.MATCHID), com.ksstats.db.keys.MATCHES__PK_MATCHES, arrayOf(Matches.MATCHES.ID), true)
val EXTRAMATCHDETAILS__FK_EXTRAMATCHDETAILS_PK_MATCHES: ForeignKey<ExtramatchdetailsRecord, MatchesRecord> = Internal.createForeignKey(Extramatchdetails.EXTRAMATCHDETAILS, DSL.name("fk_ExtraMatchDetails_pk_Matches"), arrayOf(Extramatchdetails.EXTRAMATCHDETAILS.MATCHID), com.ksstats.db.keys.MATCHES__PK_MATCHES, arrayOf(Matches.MATCHES.ID), true)
val EXTRAMATCHDETAILS__FK_EXTRAMATCHDETAILS_PK_TEAMS: ForeignKey<ExtramatchdetailsRecord, TeamsRecord> = Internal.createForeignKey(Extramatchdetails.EXTRAMATCHDETAILS, DSL.name("fk_ExtraMatchDetails_pk_Teams"), arrayOf(Extramatchdetails.EXTRAMATCHDETAILS.OPPONENTSID, Extramatchdetails.EXTRAMATCHDETAILS.TEAMID), com.ksstats.db.keys.TEAMS__PK_TEAMS, arrayOf(Teams.TEAMS.ID, Teams.TEAMS.ID), true)
val FALLOFWICKETS__FK_FALLOFWICKETS_PK_MATCHES: ForeignKey<FallofwicketsRecord, MatchesRecord> = Internal.createForeignKey(Fallofwickets.FALLOFWICKETS, DSL.name("fk_FallOfWickets_pk_Matches"), arrayOf(Fallofwickets.FALLOFWICKETS.MATCHID), com.ksstats.db.keys.MATCHES__PK_MATCHES, arrayOf(Matches.MATCHES.ID), true)
val FALLOFWICKETS__FK_FALLOFWICKETS_PK_PLAYERS: ForeignKey<FallofwicketsRecord, PlayersRecord> = Internal.createForeignKey(Fallofwickets.FALLOFWICKETS, DSL.name("fk_FallOfWickets_pk_Players"), arrayOf(Fallofwickets.FALLOFWICKETS.PLAYERID), com.ksstats.db.keys.PLAYERS__PK_PLAYERS, arrayOf(Players.PLAYERS.ID), true)
val FALLOFWICKETS__FK_FALLOFWICKETS_PK_TEAMS: ForeignKey<FallofwicketsRecord, TeamsRecord> = Internal.createForeignKey(Fallofwickets.FALLOFWICKETS, DSL.name("fk_FallOfWickets_pk_Teams"), arrayOf(Fallofwickets.FALLOFWICKETS.OPPONENTSID, Fallofwickets.FALLOFWICKETS.TEAMID), com.ksstats.db.keys.TEAMS__PK_TEAMS, arrayOf(Teams.TEAMS.ID, Teams.TEAMS.ID), true)
val FIELDING__FK_FIELDING_PK_MATCHES: ForeignKey<FieldingRecord, MatchesRecord> = Internal.createForeignKey(Fielding.FIELDING, DSL.name("fk_Fielding_pk_Matches"), arrayOf(Fielding.FIELDING.MATCHID), com.ksstats.db.keys.MATCHES__PK_MATCHES, arrayOf(Matches.MATCHES.ID), true)
val FIELDING__FK_FIELDING_PK_PLAYERS: ForeignKey<FieldingRecord, PlayersRecord> = Internal.createForeignKey(Fielding.FIELDING, DSL.name("fk_Fielding_pk_Players"), arrayOf(Fielding.FIELDING.PLAYERID), com.ksstats.db.keys.PLAYERS__PK_PLAYERS, arrayOf(Players.PLAYERS.ID), true)
val FIELDING__FK_FIELDING_PK_TEAMS: ForeignKey<FieldingRecord, TeamsRecord> = Internal.createForeignKey(Fielding.FIELDING, DSL.name("fk_Fielding_pk_Teams"), arrayOf(Fielding.FIELDING.OPPONENTSID, Fielding.FIELDING.TEAMID), com.ksstats.db.keys.TEAMS__PK_TEAMS, arrayOf(Teams.TEAMS.ID, Teams.TEAMS.ID), true)
val GROUNDSMATCHTYPES__FK_GROUNDSMATCHTYPES_PK_GROUNDS: ForeignKey<GroundsmatchtypesRecord, GroundsRecord> = Internal.createForeignKey(Groundsmatchtypes.GROUNDSMATCHTYPES, DSL.name("fk_GroundsMatchTypes_pk_Grounds"), arrayOf(Groundsmatchtypes.GROUNDSMATCHTYPES.GROUNDID), com.ksstats.db.keys.GROUNDS__PK_GROUNDS, arrayOf(Grounds.GROUNDS.ID), true)
val GROUNDSNAME__FK_GROUNDSNAME_PK_GROUNDS: ForeignKey<GroundsnameRecord, GroundsRecord> = Internal.createForeignKey(Groundsname.GROUNDSNAME, DSL.name("fk_GroundsName_pk_Grounds"), arrayOf(Groundsname.GROUNDSNAME.GROUNDID), com.ksstats.db.keys.GROUNDS__PK_GROUNDS, arrayOf(Grounds.GROUNDS.ID), true)
val INNINGS__FK_INNINGS_PK_MATCHES: ForeignKey<InningsRecord, MatchesRecord> = Internal.createForeignKey(Innings.INNINGS, DSL.name("fk_Innings_pk_Matches"), arrayOf(Innings.INNINGS.MATCHID), com.ksstats.db.keys.MATCHES__PK_MATCHES, arrayOf(Matches.MATCHES.ID), true)
val INNINGS__FK_INNINGS_PK_TEAMS: ForeignKey<InningsRecord, TeamsRecord> = Internal.createForeignKey(Innings.INNINGS, DSL.name("fk_Innings_pk_Teams"), arrayOf(Innings.INNINGS.OPPONENTSID, Innings.INNINGS.TEAMID), com.ksstats.db.keys.TEAMS__PK_TEAMS, arrayOf(Teams.TEAMS.ID, Teams.TEAMS.ID), true)
val MATCHES__FK_MATCHES_PK_GROUNDS: ForeignKey<MatchesRecord, GroundsRecord> = Internal.createForeignKey(Matches.MATCHES, DSL.name("fk_Matches_pk_Grounds"), arrayOf(Matches.MATCHES.LOCATIONID), com.ksstats.db.keys.GROUNDS__PK_GROUNDS, arrayOf(Grounds.GROUNDS.ID), true)
val MATCHES__FK_MATCHES_PK_TEAMS: ForeignKey<MatchesRecord, TeamsRecord> = Internal.createForeignKey(Matches.MATCHES, DSL.name("fk_Matches_pk_Teams"), arrayOf(Matches.MATCHES.WHOLOSTID, Matches.MATCHES.WHOWONID, Matches.MATCHES.TOSSTEAMID, Matches.MATCHES.AWAYTEAMID, Matches.MATCHES.HOMETEAMID), com.ksstats.db.keys.TEAMS__PK_TEAMS, arrayOf(Teams.TEAMS.ID, Teams.TEAMS.ID, Teams.TEAMS.ID, Teams.TEAMS.ID, Teams.TEAMS.ID), true)
val MATCHREFEREESMATCHES__FK_MATCHREFEREESMATCHES_PK_MATCHES: ForeignKey<MatchrefereesmatchesRecord, MatchesRecord> = Internal.createForeignKey(Matchrefereesmatches.MATCHREFEREESMATCHES, DSL.name("fk_MatchRefereesMatches_pk_Matches"), arrayOf(Matchrefereesmatches.MATCHREFEREESMATCHES.MATCHID), com.ksstats.db.keys.MATCHES__PK_MATCHES, arrayOf(Matches.MATCHES.ID), true)
val MATCHREFEREESMATCHES__FK_MATCHREFEREESMATCHES_PK_MATCHREFEREES: ForeignKey<MatchrefereesmatchesRecord, MatchrefereesRecord> = Internal.createForeignKey(Matchrefereesmatches.MATCHREFEREESMATCHES, DSL.name("fk_MatchRefereesMatches_pk_MatchReferees"), arrayOf(Matchrefereesmatches.MATCHREFEREESMATCHES.PERSONID), com.ksstats.db.keys.MATCHREFEREES__PK_MATCHREFEREES, arrayOf(Matchreferees.MATCHREFEREES.ID), true)
val MATCHSUBTYPE__FK_MATCHSUBTYPE_PK_MATCHES: ForeignKey<MatchsubtypeRecord, MatchesRecord> = Internal.createForeignKey(Matchsubtype.MATCHSUBTYPE, DSL.name("fk_MatchSubType_pk_Matches"), arrayOf(Matchsubtype.MATCHSUBTYPE.MATCHID), com.ksstats.db.keys.MATCHES__PK_MATCHES, arrayOf(Matches.MATCHES.ID), true)
val NOTES__FK_NOTES_PK_MATCHES: ForeignKey<NotesRecord, MatchesRecord> = Internal.createForeignKey(Notes.NOTES, DSL.name("fk_Notes_pk_Matches"), arrayOf(Notes.NOTES.MATCHID), com.ksstats.db.keys.MATCHES__PK_MATCHES, arrayOf(Matches.MATCHES.ID), true)
val PARTNERSHIPS__FK_PARTNERSHIPS_PK_MATCHES: ForeignKey<PartnershipsRecord, MatchesRecord> = Internal.createForeignKey(Partnerships.PARTNERSHIPS, DSL.name("fk_Partnerships_pk_Matches"), arrayOf(Partnerships.PARTNERSHIPS.MATCHID), com.ksstats.db.keys.MATCHES__PK_MATCHES, arrayOf(Matches.MATCHES.ID), true)
val PARTNERSHIPS__FK_PARTNERSHIPS_PK_TEAMS: ForeignKey<PartnershipsRecord, TeamsRecord> = Internal.createForeignKey(Partnerships.PARTNERSHIPS, DSL.name("fk_Partnerships_pk_Teams"), arrayOf(Partnerships.PARTNERSHIPS.OPPONENTSID, Partnerships.PARTNERSHIPS.TEAMID), com.ksstats.db.keys.TEAMS__PK_TEAMS, arrayOf(Teams.TEAMS.ID, Teams.TEAMS.ID), true)
val PARTNERSHIPSPLAYERS__FK_PARTNERSHIPSPLAYERS_PK_PARTNERSHIPS: ForeignKey<PartnershipsplayersRecord, PartnershipsRecord> = Internal.createForeignKey(Partnershipsplayers.PARTNERSHIPSPLAYERS, DSL.name("fk_PartnershipsPlayers_pk_Partnerships"), arrayOf(Partnershipsplayers.PARTNERSHIPSPLAYERS.PARTNERSHIPID), com.ksstats.db.keys.PARTNERSHIPS__PK_PARTNERSHIPS, arrayOf(Partnerships.PARTNERSHIPS.ID), true)
val PARTNERSHIPSPLAYERS__FK_PARTNERSHIPSPLAYERS_PK_PLAYERS: ForeignKey<PartnershipsplayersRecord, PlayersRecord> = Internal.createForeignKey(Partnershipsplayers.PARTNERSHIPSPLAYERS, DSL.name("fk_PartnershipsPlayers_pk_Players"), arrayOf(Partnershipsplayers.PARTNERSHIPSPLAYERS.PLAYERID), com.ksstats.db.keys.PLAYERS__PK_PLAYERS, arrayOf(Players.PLAYERS.ID), true)
val PLAYERSMATCHES__FK_PLAYERSMATCHES_PK_MATCHES: ForeignKey<PlayersmatchesRecord, MatchesRecord> = Internal.createForeignKey(Playersmatches.PLAYERSMATCHES, DSL.name("fk_PlayersMatches_pk_Matches"), arrayOf(Playersmatches.PLAYERSMATCHES.MATCHID), com.ksstats.db.keys.MATCHES__PK_MATCHES, arrayOf(Matches.MATCHES.ID), true)
val PLAYERSMATCHES__FK_PLAYERSMATCHES_PK_PLAYERS: ForeignKey<PlayersmatchesRecord, PlayersRecord> = Internal.createForeignKey(Playersmatches.PLAYERSMATCHES, DSL.name("fk_PlayersMatches_pk_Players"), arrayOf(Playersmatches.PLAYERSMATCHES.PLAYERID), com.ksstats.db.keys.PLAYERS__PK_PLAYERS, arrayOf(Players.PLAYERS.ID), true)
val PLAYERSOFTHEMATCHMATCHES__FK_PLAYERSOFTHEMATCHMATCHES_PK_MATCHES: ForeignKey<PlayersofthematchmatchesRecord, MatchesRecord> = Internal.createForeignKey(Playersofthematchmatches.PLAYERSOFTHEMATCHMATCHES, DSL.name("fk_PlayersOfTheMatchMatches_pk_Matches"), arrayOf(Playersofthematchmatches.PLAYERSOFTHEMATCHMATCHES.MATCHID), com.ksstats.db.keys.MATCHES__PK_MATCHES, arrayOf(Matches.MATCHES.ID), true)
val PLAYERSOFTHEMATCHMATCHES__FK_PLAYERSOFTHEMATCHMATCHES_PK_PLAYERS: ForeignKey<PlayersofthematchmatchesRecord, PlayersRecord> = Internal.createForeignKey(Playersofthematchmatches.PLAYERSOFTHEMATCHMATCHES, DSL.name("fk_PlayersOfTheMatchMatches_pk_Players"), arrayOf(Playersofthematchmatches.PLAYERSOFTHEMATCHMATCHES.PERSONID), com.ksstats.db.keys.PLAYERS__PK_PLAYERS, arrayOf(Players.PLAYERS.ID), true)
val PLAYERSTEAMS__FK_PLAYERSTEAMS_PK_MATCHES: ForeignKey<PlayersteamsRecord, MatchesRecord> = Internal.createForeignKey(Playersteams.PLAYERSTEAMS, DSL.name("fk_PlayersTeams_pk_Matches"), arrayOf(Playersteams.PLAYERSTEAMS.DEBUTID), com.ksstats.db.keys.MATCHES__PK_MATCHES, arrayOf(Matches.MATCHES.ID), true)
val PLAYERSTEAMS__FK_PLAYERSTEAMS_PK_PLAYERS: ForeignKey<PlayersteamsRecord, PlayersRecord> = Internal.createForeignKey(Playersteams.PLAYERSTEAMS, DSL.name("fk_PlayersTeams_pk_Players"), arrayOf(Playersteams.PLAYERSTEAMS.PLAYERID), com.ksstats.db.keys.PLAYERS__PK_PLAYERS, arrayOf(Players.PLAYERS.ID), true)
val PLAYERSTEAMS__FK_PLAYERSTEAMS_PK_TEAMS: ForeignKey<PlayersteamsRecord, TeamsRecord> = Internal.createForeignKey(Playersteams.PLAYERSTEAMS, DSL.name("fk_PlayersTeams_pk_Teams"), arrayOf(Playersteams.PLAYERSTEAMS.TEAMID), com.ksstats.db.keys.TEAMS__PK_TEAMS, arrayOf(Teams.TEAMS.ID), true)
val RESERVEUMPIRESMATCHES__FK_RESERVEUMPIRESMATCHES_PK_MATCHES: ForeignKey<ReserveumpiresmatchesRecord, MatchesRecord> = Internal.createForeignKey(Reserveumpiresmatches.RESERVEUMPIRESMATCHES, DSL.name("fk_ReserveUmpiresMatches_pk_Matches"), arrayOf(Reserveumpiresmatches.RESERVEUMPIRESMATCHES.MATCHID), com.ksstats.db.keys.MATCHES__PK_MATCHES, arrayOf(Matches.MATCHES.ID), true)
val RESERVEUMPIRESMATCHES__FK_RESERVEUMPIRESMATCHES_PK_RESERVEUMPIRES: ForeignKey<ReserveumpiresmatchesRecord, ReserveumpiresRecord> = Internal.createForeignKey(Reserveumpiresmatches.RESERVEUMPIRESMATCHES, DSL.name("fk_ReserveUmpiresMatches_pk_ReserveUmpires"), arrayOf(Reserveumpiresmatches.RESERVEUMPIRESMATCHES.PERSONID), com.ksstats.db.keys.RESERVEUMPIRES__PK_RESERVEUMPIRES, arrayOf(Reserveumpires.RESERVEUMPIRES.ID), true)
val SCORERSMATCHES__FK_SCORERSMATCHES_PK_MATCHES: ForeignKey<ScorersmatchesRecord, MatchesRecord> = Internal.createForeignKey(Scorersmatches.SCORERSMATCHES, DSL.name("fk_ScorersMatches_pk_Matches"), arrayOf(Scorersmatches.SCORERSMATCHES.MATCHID), com.ksstats.db.keys.MATCHES__PK_MATCHES, arrayOf(Matches.MATCHES.ID), true)
val SCORERSMATCHES__FK_SCORERSMATCHES_PK_SCORERS: ForeignKey<ScorersmatchesRecord, ScorersRecord> = Internal.createForeignKey(Scorersmatches.SCORERSMATCHES, DSL.name("fk_ScorersMatches_pk_Scorers"), arrayOf(Scorersmatches.SCORERSMATCHES.PERSONID), com.ksstats.db.keys.SCORERS__PK_SCORERS, arrayOf(Scorers.SCORERS.ID), true)
val TEAMSMATCHTYPES__FK_TEAMSMATCHTYPES_PK_TEAMS: ForeignKey<TeamsmatchtypesRecord, TeamsRecord> = Internal.createForeignKey(Teamsmatchtypes.TEAMSMATCHTYPES, DSL.name("fk_TeamsMatchTypes_pk_Teams"), arrayOf(Teamsmatchtypes.TEAMSMATCHTYPES.TEAMID), com.ksstats.db.keys.TEAMS__PK_TEAMS, arrayOf(Teams.TEAMS.ID), true)
val TVUMPIRESMATCHES__FK_TVUMPIRESMATCHES_PK_MATCHES: ForeignKey<TvumpiresmatchesRecord, MatchesRecord> = Internal.createForeignKey(Tvumpiresmatches.TVUMPIRESMATCHES, DSL.name("fk_TvUmpiresMatches_pk_Matches"), arrayOf(Tvumpiresmatches.TVUMPIRESMATCHES.MATCHID), com.ksstats.db.keys.MATCHES__PK_MATCHES, arrayOf(Matches.MATCHES.ID), true)
val TVUMPIRESMATCHES__FK_TVUMPIRESMATCHES_PK_TVUMPIRES: ForeignKey<TvumpiresmatchesRecord, TvumpiresRecord> = Internal.createForeignKey(Tvumpiresmatches.TVUMPIRESMATCHES, DSL.name("fk_TvUmpiresMatches_pk_TvUmpires"), arrayOf(Tvumpiresmatches.TVUMPIRESMATCHES.PERSONID), com.ksstats.db.keys.TVUMPIRES__PK_TVUMPIRES, arrayOf(Tvumpires.TVUMPIRES.ID), true)
val UMPIRESMATCHES__FK_UMPIRESMATCHES_PK_MATCHES: ForeignKey<UmpiresmatchesRecord, MatchesRecord> = Internal.createForeignKey(Umpiresmatches.UMPIRESMATCHES, DSL.name("fk_UmpiresMatches_pk_Matches"), arrayOf(Umpiresmatches.UMPIRESMATCHES.MATCHID), com.ksstats.db.keys.MATCHES__PK_MATCHES, arrayOf(Matches.MATCHES.ID), true)
val UMPIRESMATCHES__FK_UMPIRESMATCHES_PK_UMPIRES: ForeignKey<UmpiresmatchesRecord, UmpiresRecord> = Internal.createForeignKey(Umpiresmatches.UMPIRESMATCHES, DSL.name("fk_UmpiresMatches_pk_Umpires"), arrayOf(Umpiresmatches.UMPIRESMATCHES.PERSONID), com.ksstats.db.keys.UMPIRES__PK_UMPIRES, arrayOf(Umpires.UMPIRES.ID), true)
